name: "CD C++: Documentation"

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: "Documentation"
    runs-on: macos-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: true
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        channels: conda-forge
        channel-priority: true
    - name: Install LLVM
      run: |
        wget -q https://gitlab.com/Arthapz/llvm13-macos/-/raw/master/LLVM13.7z?inline=false -O ${{ runner.workspace }}/LLVM13.7z
        7z x ${{ runner.workspace }}/LLVM13.7z
    - name: Configure native file
      run: |
        cp ${{ runner.workspace }}/CppUtils/resources/native-files/macos-llvm13-clang.ini.sample ${{ runner.workspace }}/CppUtils/resources/native-files/macos-llvm13-clang.ini
        sed -i -e 's|%TOOLCHAIN_PATH%|${{ runner.workspace }}/CppUtils/LLVM13.0.0git.xctoolchain/usr|g' ${{ runner.workspace }}/CppUtils/resources/native-files/macos-llvm13-clang.ini
    - name: Install Meson and Ninja
      run: pip3 install meson ninja
    - name: Install Standardese
      run: |
        conda install standardese --yes
        standardese --version
    - name: Install MkDocs
      run: |
        pip3 install mkdocs mkdocs-material
    - name: Generate Documentation
      env:
        CC: clang
        CXX: clang++
        LDFLAGS: '-ldl'
      run: |
        meson build -Ddefault_library=static -Denable_documentation=true --native-file ${{ runner.workspace }}/CppUtils/resources/native-files/macos-llvm13-clang.ini
        ninja -C build -j7
