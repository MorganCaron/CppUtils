name: "CI C++: Linux"

on: [ push, pull_request ]

jobs:
  build:
    name: ${{ matrix.os.name }} (${{ matrix.compiler.name }}, ${{ matrix.library-type }})
    runs-on: ${{ matrix.os.value }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - {
          name: "Ubuntu",
          value: ubuntu-latest
        }
        compiler:
        - {
          name: "GCC 13 (apt)",
          cc: "gcc",
          cxx: "g++",
          install: "sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt-get install -y gcc-13 g++-13",
          alternative-cc: "sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 13",
          alternative-cxx: "sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 13",
        }
        - { # https://apt.llvm.org
          name: "Clang 19 (apt)",
          cc: "clang",
          cxx: "clang++",
          install: "sudo wget https://apt.llvm.org/llvm.sh && sudo chmod +x llvm.sh && sudo ./llvm.sh 19 ''",
          alternative-cc: "sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 19",
          alternative-cxx: "sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-19 19"
        }
        - {
          name: "Latest Clang",
          cc: "clang",
          cxx: "clang++",
          xmake-toolchain: "--toolchain=llvm --sdk=llvm/"
        }
        library-type: [static, shared]
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install ${{ matrix.compiler.name }} from a package manager
      if: ${{ matrix.compiler.install }}
      run: |
        ${{ matrix.compiler.install }}
        ${{ matrix.compiler.alternative-cc }}
        ${{ matrix.compiler.alternative-cxx }}

    - name: Install Latest Clang
      if: ${{ matrix.os.name == 'Ubuntu' && matrix.compiler.name == 'Latest Clang' }}
      uses: MorganCaron/latest-clang-action@master

    # https://xmake.io/#/guide/installation
    - name: Install XMake
      run: |
        curl -fsSL https://xmake.io/shget.text | bash

    - name: Compile
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}
      run: |
        xmake f ${{ matrix.compiler.xmake-toolchain }} --runtimes="c++_shared" --enable_tests=y --yes
        xmake build -vD

    - name: Run tests
      run: |
        xmake run
