name: "CI C++: Linux"

on: [ push, pull_request ]

jobs:
  build:
    name: ${{ matrix.os.name }} (${{ matrix.compiler.cxx }}, ${{ matrix.library-type }})
    runs-on: ${{ matrix.os.value }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - {
          name: "Ubuntu",
          value: ubuntu-latest
        }
        compiler:
        - {
          cc: "gcc",
          cxx: "g++",
          install: "sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt-get install -y gcc-11 g++-11",
          alternative-cc: "sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11",
          alternative-cxx: "sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11"
        }
        - {
          cc: "clang",
          cxx: "clang++",
          install: "sudo wget https://apt.llvm.org/llvm.sh && sudo chmod +x llvm.sh && sudo ./llvm.sh 16 ''",
          alternative-cc: "sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 16",
          alternative-cxx: "sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-16 16"
        }
        library-type: [static, shared]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install ${{ matrix.compiler.cc }}/${{ matrix.compiler.cxx }}
      run: |
        ${{ matrix.compiler.install }}
        ${{ matrix.compiler.alternative-cc }}
        ${{ matrix.compiler.alternative-cxx }}
    - name: Install XMake
      run: |
        sudo apt install software-properties-common
        sudo add-apt-repository ppa:xmake-io/xmake
        sudo apt update
        sudo apt install xmake
    - name: Compile
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}
      run: |
        xmake f --toolchain=llvm --runtimes="c++_shared" --enable_tests=y --yes
        xmake build
    - name: Run tests
      run: |
        xmake run
