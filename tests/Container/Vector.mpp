export module CppUtils.UnitTests.Container.Vector;

import std;
import CppUtils;

export namespace CppUtils::UnitTest::Container::Vector
{
	inline auto _ = TestSuite{"Container/Vector", [](auto& suite) {
		using Logger = CppUtils::Logger<"CppUtils">;

		suite.addTest("merge", [&] {
			const auto a = std::vector<std::string>{"a", "b"};
			const auto b = std::vector<std::string>{"c", "d"};
			const auto c = std::vector<std::string>{"e", "f"};
			const auto d = std::vector<std::string>{"g", "h"};
			const auto vector = CppUtils::Container::Vector::merge(a, b, c, d);
			suite.expectEqual(std::size(vector), std::size_t{8}); // Todo: ""uz (not supported on MSVC)
			for (const auto& string : vector)
				Logger::print("{}\n", string);
		});
	}};
}
