export module CppUtils.UnitTests.Type.Tuple;

import std;
import CppUtils;

export namespace CppUtils::UnitTest::Type::Tuple
{
	inline auto _ = TestSuite{"Type/Tuple", {"Logger"}, [](auto& suite) {
		using Logger = CppUtils::Logger<"CppUtils">;

		suite.addTest("visitAt", [&] {
			auto called = std::atomic_bool{false};
			auto function = [&called](auto&& value) {
				Logger::print<"detail">("{}", value);
				called = true;
			};

			auto tuple = std::make_tuple(1, "Hello World!");
			auto _ = CppUtils::Type::Tuple::visitAt(tuple, 1, function);

			suite.expect(called);
		});
	}};
}
