export module CppUtils.Language.LabelsCompiler;

import std;
import CppUtils.Type;
import CppUtils.String;
import CppUtils.Language.VirtualMachine;

export namespace CppUtils::Language::LabelsCompiler
{
	template<class CharT>
	inline constexpr auto compile(const std::basic_string_view<CharT> source) -> std::basic_string<CharT>
	{
		using namespace std::literals;
		constexpr auto labelsCompiler = uR"(
				(:N output
					(3:\(, 4;) push back
					(7; max length
						P (2: (2, 6, 0, 0= (0, 181, 0? while max length not equal zero
							(: (0, 0, 0, 2C output
								(3:\ , 4;) push back
							)
							(1, 6, 1, 0- (0, 2, 1, 0C) decrement max length
							, 0, 7J goto while
						)
					)
					(3: push back
						\,, 4;
						_\1, 4;
						_\J, 4;
					)
					(1: (1;, 2;) source length
						(0 source position
							P (2: (2, 4, 1, 4<! (0, 797, 0? while source position inferior source length
								(: (0, 0, 0, 2C output
									(3: (1; (1: (2, 0, 0, 2C, 3;)) get char at source position
										(2: (1, 6, 3:\\, 0=! (0, 305, 0? if char is backslash
											_\\, 4; push back
											(2, 4, 1, 0+ (0, 2, 2, 0C) increment output position
											(: (0, 0, 0, 2C output
												(3: (1; (1: (2, 0, 0, 2C, 3;)) get char at source position
													(4; push back
												)
											)
											(209, 0J goto end if
										(2: (1, 6, 3:\¤, 0=!, 0, 123, 0? if char is ¤
											_\,, 4; push back
											_\5, 4; push back
											_\J, 4; push back
										(36, 0J else
											, 4; push back char
									)
								)
								(2, 4, 1, 0+ (0, 2, 2, 0C) increment source position
								(0, 7J goto while
							)
						)
					)
					(3:\X, 4;) push back
					(1: (: (0, 0, 0, 2C, 5;) (0, 1, 0- output length
						(7; position
							P (2: (1, 4, 0, 0= (0, 451, 0? while output length not equal zero
									(1, 4, 10, 0% get digit
										(1, 4, 0, 6- (0, 10, 0/ (0, 2, 1, 0C) remove digit from output length
										(0, \0, 0+ add zero
										(: (0, 0, 0, 2C output
											(1: (2, 0, 0, 2C position
												(3: (3, 2, 0, 2C cast digit to char
													, 8; replace
												)
												(0, 1, 0- decrement position
											(0, 2, 2, 0C)
										)
									)
								(0, 7J goto while
							)
						)
					)
					(1: (: (0, 0, 0, 2C, 5;) output length
						(0 output position
							P (2: (2, 4, 1, 4<! (0, 1142, 0? while output position inferior output length
								(: (0, 0, 0, 2C output
									(3: (: (0, 0, 0, 2C (1: (2, 0, 0, 2C, 6;)) get char at output position
										(2: (1, 6, 3:\\, 0=! (0, 117, 0? if char is backslash
											(2, 4, 1, 0+ (0, 2, 2, 0C) increment output position
											(730, 0J goto end if
										(2: (1, 6, 3:\§, 0=! (0, 675, 0? if char is §
										_\(, 4; push back
										(1: (2, 0, 0, 2C output position
											P (2: (6, 4, 0, 0= (0, 242, 0? while value not equal zero
												(6, 4, 10, 0% get digit
													(6, 4, 0, 6- (0, 10, 0/ (0, 2, 6, 0C) remove digit from value
													(0, \0, 0+ add zero
													S switch position and digit
												(0, 7J goto while
											)
											P (2: (2, 6, 0, 0= (0, 220, 0? while char is not zero
												(: (0, 0, 0, 2C output
													(3: (3, 2, 0, 2C cast digit to char
														(4; push back
													)
												)
												S) drop digit
												(0, 7J goto while
											)
										) end if
									)
								)
								(2, 4, 1, 0+ (0, 2, 2, 0C) increment output position
								(0, 7J goto while
							)
						)
					)
					(3:\(, 4;) push back
					(7; (0, 3, 0+ header length
						P (2: (1, 4, 0, 0= (0, 236, 0? while header length not equal zero
								(1, 4, 10, 0% get digit
									(1, 4, 0, 6- (0, 10, 0/ (0, 2, 1, 0C) remove digit from header length
									(0, \0, 0+ add zero
								S switch position and digit
							(0, 7J goto while
						)
						P (2: (2, 6, 0, 0= (0, 185, 0? while char is not zero
							(: (0, 0, 0, 2C output
								(3: (3, 2, 0, 2C cast digit to char
									(4; push back
								)
							)
							S) drop digit
							(0, 7J goto while
						)
					)
					(3: push back
						\,, 4;
						_\1, 4;
						_\J, 4;
					)
				)"sv;
		constexpr auto maxSizeLength = String::getNumberLength(std::numeric_limits<std::size_t>::max());
		auto output = std::unique_ptr<std::basic_string<CharT>>(VirtualMachine::execute<
			std::basic_string<CharT>*,
			std::size_t,
			bool,
			CharT,
			const decltype(source)*>(
			labelsCompiler,
			&source,
			&decltype(source)::size,
			&decltype(source)::at,
			&std::basic_string<CharT>::push_back,
			&std::basic_string<CharT>::size,
			Type::getConstMemberFunction(&std::basic_string<CharT>::at),
			maxSizeLength,
			+[](std::basic_string<CharT>* s, std::size_t pos, CharT c) -> void { s->replace(pos, 1, 1, c); }));
		return std::basic_string<CharT>{std::move(*output)};
	}
}
