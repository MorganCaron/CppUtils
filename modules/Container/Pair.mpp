export module CppUtils.Container.Pair;

import std;

export namespace CppUtils::Container
{
	template<class Lhs, class Rhs>
	[[nodiscard]] constexpr inline auto swapPair(std::pair<Lhs, Rhs>&& pair) noexcept -> std::pair<Rhs, Lhs>
	{
		return std::pair<Rhs, Lhs>{std::move(pair.second), std::move(pair.first)};
	}

	template<class Lhs, class Rhs>
	[[nodiscard]] constexpr inline auto swapPair(const std::pair<Lhs, Rhs>& pair) noexcept -> std::pair<Rhs, Lhs>
	{
		return std::pair<Rhs, Lhs>{pair.second, pair.first};
	}
}
