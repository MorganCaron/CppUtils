module;

#include <cerrno>

export module CppUtils.System.Errno;

import std;

export namespace CppUtils::System
{
	inline auto throwErrno(int value, std::string_view message = "") -> int
	{
		if (value == -1) [[unlikely]]
			throw std::runtime_error{
				std::empty(message) ?
					std::format("{}", std::strerror(errno)) :
					std::format("{}: {}", message, std::strerror(errno))};
		return value;
	}

	[[nodiscard]] inline auto expectErrno(int value, std::string_view message = "") -> std::expected<int, std::runtime_error>
	{
		if (value == -1) [[unlikely]]
			return std::unexpected(std::runtime_error{
				std::empty(message) ?
					std::format("{}", std::strerror(errno)) :
					std::format("{}: {}", message, std::strerror(errno))});
		return value;
	}
}
